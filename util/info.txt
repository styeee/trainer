При выполнении заданий на данном тренажере будут затронуты слеующие темы: директивы, операторы, функции, условия, циклы, переменные...
Для создания сложных программы или возмоности добиться максимальной производительности этого не достаточно...
Но изучение данных тем станет хорошим началом и полученных знаний хватит чтобы начать писать простые программы.
В папке присутствует компилятор "TCC - tiny c compiler" compiler.exe позволяющий программировать на языке СИ.
В папках include и lib находятся файлы со стандартными библиотками необходимыми для программирования на СИ. 

№1. Написать минимальную программу.

Программа - это файл в котором с помощью двоичных цифр описана последовательность действий.
Все действия которые может выполнить компьютер заранее пронумерованы (и называются набором команд).
В файле записаны номера действий которые компьютеру предстоит выполнить после запуска программы.
На практике нам нужно чтобы компьютер выполнил для нас полезные действия направленные на решение какого либо задания.
Когда мы поручаем выполнить задание человеку мы можем сообщить ему детали выполнения на естественном языке.
В этом плане компьютер менее гибкий - его набор действий конечен, а их последовательсность требует четкого описания.
Первые программисты описывали программы просто записывая номера действий нулями и единицами (это очень сложно).
В итоге компромисом стали языки программирования.
Это все еще языки, хоть и не такие гибкие как естественные, но на них все еще довольно просто описывать задачи.
Программа описанная на языке программирования может транслироваться в файл с обычным набором комманд.
В windows такой файл имеет расширение .exe, это означает executable или же запускаемый.
Мы можем запускать программы в windows, например, кликнув по такому файлу два раза.
Один из вариантов транслятора это компилятор.
Компилятор получает по сути обычный текстовый файл с символами (например main.c)...
Или же код, описывающий программу на каком либо языке программирования (например СИ следовательно файл .c).
И создает на его основе запускаемый файл или же по сути саму программу (например main.exe).

В папке присутствует компилятор compiler.exe (итересно, что компилятор также является программой)
Необходимо перетащить на него main.c - файл с текстом кода программы на языке СИ.
Далее компилятор должен создать main.exe, но он этого не сделает если содержимое main.c было пустым.
Скрипт compile_and_ run.bat запускает compiler.exe переавая ему файл с названием main.c.
Далее запускает файл с названием main.exe, а также выводит на экран ошибки связанные с этими действиями.
Запустим скрипт compile_and_ run.bat чтобы посмотреть в чем ошибка (выводит tcc: undefined symbol 'main').
Выведенное сообщение означает, что в коде отсутвует описание символа main (следовательно и main.exe не запуститься).

В СИ программа представлена функцией с названием main и олицитворяется ею (также называется точка входа в программу).
Поэтому чтобы написать минимальную программу необходимо в коде описать функцию с названием main.
Минимальная программа скомпилируется без ошибок и запуститься но не будет ничего делать.
В других языках программирования, например, Java и C# программа представленна не функцией, а классом Program.
В ассемблере меткой start, а в python или javascript вообще ничем и пустой файл уже будет минимальной программой.

main на языке СИ как и любая другая функция состоит из заголовка и тела.
Для начала опишем заголовок "int main()" при его описании в начале пишеться имя функции.
Затем слева через разделитель (например, пробел) тип данных для значения которое функция будет возвращать.
И справа открывающаяся и закрывающаяся круглые скобки, которые указывают что это именно функция а не переменная или...
После отличительной синтаксической особенности функций в виде круглых скобок пишуться две фигурные скобки.
Открывающая фигурная скобка означает начало тела, а закрывающая конец.
Между ними записываются составные элементы тела - выраения, у каждого из которых на конце ";".
Функция как раз является описанием действий которые компьютеру необходимо выполнить, а выражения действиями.
При запуске функции выражения начинают выполняться друг за другом в том порядке в котором были написаны внутри тела.
В итоге полное описание функции main будет выглядить так "int main(){return 0;}"
"{return 0;}" это тело состоящее всего из одного выражения "return 0;" (точка с запятой на конце).
return это ключевое слово позволяющее вернуть функции результат (после чего она завершается).
Если рассмотреть привычную функцию записанную в математическом стиле f(x)=y, то ее результат это y.
Здесь же результат это 0 важно чтобы результат преналежал множеству int, так как мы указали его ранее.
int это множество значений от -2147483647 до 2147483647, 0 входит в это множество значит все правильно.

Необходимо написать в файл main.c код с минимальной программой "int main(){return 0;}"
Далее перетащить main.c на compiler.exe в результате создастся main.exe - наша минимальная программа.
Если ее запустить ничего не произойдет, но она вернет результат...
